plugins {
    id 'java'
    id 'io.qameta.allure' version '2.10.0'
    id "io.freefair.lombok" version "6.6.3"
}


repositories {
    mavenCentral()
}

def allureVersion = "2.21.0",
    selenideVersion = "6.12.2",
    ownerVersion = "1.0.12",
    junitVersion = "5.9.2",
    assertjCoreVersion = "3.24.2",
    log4jVersion = "2.20.0"

allure {
    report {
        version.set(allureVersion)
    }
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set(allureVersion)
            }
        }
    }
}

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
    compileJava.options.encoding = 'UTF-8'
    compileTestJava.options.encoding = 'UTF-8'
}

dependencies {
    implementation 'org.jetbrains:annotations:24.0.1'
    testImplementation(
            "org.aspectj:aspectjweaver:1.9.19",
            "org.junit.jupiter:junit-jupiter-api:$junitVersion",
            "com.codeborne:selenide:$selenideVersion",
            "io.qameta.allure:allure-selenide:$allureVersion",
            "org.aeonbits.owner:owner:$ownerVersion",
            "org.junit.jupiter:junit-jupiter:$junitVersion",
            "org.assertj:assertj-core:$assertjCoreVersion",
            "org.apache.logging.log4j:log4j-api:$log4jVersion",
            "org.apache.logging.log4j:log4j-core:$log4jVersion",
            "com.github.javafaker:javafaker:1.0.2",
            "org.jsoup:jsoup:1.15.4",
            "us.codecraft:xsoup:0.3.6",
            "org.awaitility:awaitility:4.2.0")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:$junitVersion")
}

tasks.withType(Test) {
    useJUnitPlatform()
    systemProperties(System.getProperties())

    systemProperties += [
            'junit.jupiter.execution.parallel.enabled'                 : System.getProperty("parallelRun"),
            'junit.jupiter.execution.parallel.mode.default'            : 'concurrent',
            'junit.jupiter.execution.parallel.mode.classes.default'    : 'concurrent',
            'junit.jupiter.execution.parallel.config.strategy'         : 'fixed',
            'junit.jupiter.execution.parallel.config.fixed.parallelism': System.getProperty("threads", "4").toInteger()
    ]

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}


task search_tests (type: Test) {
    useJUnitPlatform {
        includeTags "search"
        includeTags "address"
    }


    task page_tests(type: Test) {
        useJUnitPlatform {
            includeTags "page"
            includeTags "form"
        }
    }
}